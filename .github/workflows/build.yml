# .github/workflows/build-and-release.yml
name: Build and Release UN1CA ROM for M51

on:
  workflow_dispatch:
  push:
    tags:
      - 'm51-build-*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.27-6/x64
      JAVA_HOME_11_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.27-6/x64
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip tree

      - name: Build UN1CA ROM
        run: |
          cd UN1CA
          # replace with your actual build commands:
          # source build/envsetup.sh && lunch m51-userdebug && make -j$(nproc) bacon
          bash build_rom.sh

      - name: Locate built ROM ZIP
        id: find_zip
        run: |
          OUTDIR="$GITHUB_WORKSPACE/UN1CA/out/target/product/m51"
          echo "Looking for ROM ZIP in $OUTDIR"
          ZIP=$(find "$OUTDIR" -maxdepth 1 -type f -name 'UN1CA_*.zip' | head -n1)
          if [ -z "$ZIP" ]; then
            echo "❌ No ROM ZIP found in $OUTDIR"
            exit 1
          fi
          NAME=$(basename "$ZIP")
          echo "✅ Found ROM ZIP: $NAME"
          echo "zip_path=$ZIP" >> "$GITHUB_OUTPUT"
          echo "zip_name=$NAME" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "UN1CA ROM Build ${{ github.ref_name }}"
          body: |
            • Device: Galaxy M51  
            • ROM: UN1CA  
            • Tag: ${{ github.ref_name }}  
            • Built at: ${{ github.run_started_at }}

      - name: Upload ROM ZIP to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_zip.outputs.zip_path }}
          asset_name: ${{ steps.find_zip.outputs.zip_name }}
          asset_content_type: application/zip
