name: Build and Release UN1CA ROM for M51

on:
  workflow_dispatch:
  push:
    branches:
      - 'fourteen'

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo docker system prune -a -f

      - name: Set up build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ccache clang git-core gnupg flex bison gperf build-essential \
            zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \
            lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev \
            libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig python3 \
            libssl-dev rsync liblz4-tool repo

          # Platform keys
          mkdir -p security
          echo -n "${{ secrets.PLATFORM_KEY_PK8 }}" | base64 --decode > security/unica_platform.pk8
          echo -n "${{ secrets.PLATFORM_KEY_PEM }}" | base64 --decode > security/unica_platform.x509.pem

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build ROM
        run: |
          source ./buildenv.sh m51
          ./scripts/download_fw.sh
          ./scripts/extract_fw.sh
          ./scripts/make_rom.sh

          # Create output directory if it doesn't exist
          mkdir -p out/target/product/m51

          # Package ROM if not already done
          if ! ls out/target/product/m51/UN1CA*.zip 1> /dev/null 2>&1; then
            echo "Packaging ROM files into ZIP..."
            cd out/target/product/m51
            zip -r UN1CA-m51-$(date +%Y%m%d-%H%M).zip *.img
            cd ../../../../..
          fi

      - name: Find ROM file
        id: find-rom
        run: |
          ROM_PATH=$(find out/target/product/m51 -name 'UN1CA*.zip' -o -name 'UN1CA*.tar' | head -n1)
          if [ -z "$ROM_PATH" ]; then
            echo "::error::No ROM file found in out/target/product/m51/"
            find out/ -type f -name "*.img" -o -name "*.zip" -o -name "*.tar"
            exit 1
          fi
          echo "ROM_FILE=${ROM_PATH}" >> $GITHUB_OUTPUT
          echo "ROM_NAME=$(basename "${ROM_PATH}")" >> $GITHUB_OUTPUT
          echo "Found ROM: ${ROM_PATH}"

      - name: Upload ROM to Releases
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find-rom.outputs.ROM_FILE }}
          tag_name: build-${{ github.run_number }}
          name: "UN1CA ROM for M51 (Build ${{ github.run_number }})"
          body: |
            Automated build of UN1CA ROM
            • Device: m51
            • Build date: $(date +'%Y-%m-%d %H:%M:%S')
            • Commit: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ github.run_number }}
          path: |
            out/*.log
            out/error.log
            out/verbose.log
