name: Build and Release M51

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'fourteen'

jobs:
  build:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        target: [m51]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Free disk space (1/3)
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Free disk space (2/3)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Free disk space (3/3)
        uses: rokibhasansagar/slimhub_actions@main
        with:
          retain: 'compiler_cmake'

      - name: Set up build environment
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            attr ccache clang ffmpeg golang \
            libbrotli-dev libgtest-dev libprotobuf-dev libunwind-dev libpcre2-dev \
            libzstd-dev linux-modules-extra-$(uname -r) lld protobuf-compiler webp
          sudo modprobe erofs f2fs
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          echo -n "${{ secrets.PLATFORM_KEY_PK8 }}" | base64 --decode > security/unica_platform.pk8
          echo -n "${{ secrets.PLATFORM_KEY_PEM }}" | base64 --decode > security/unica_platform.x509.pem

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Build dependencies
        run: source ./buildenv.sh ${{ matrix.target }}

      - name: Download stock firmwares
        run: |
          source ./buildenv.sh ${{ matrix.target }}
          ./scripts/download_fw.sh

      - name: Extract stock firmwares
        run: |
          source ./buildenv.sh ${{ matrix.target }}
          ./scripts/extract_fw.sh

      - name: Build ROM
        run: |
          source ./buildenv.sh ${{ matrix.target }}
          ./scripts/make_rom.sh

      - name: Find ROM zip file
        id: find-rom
        run: |
          ROM_FILE=$(find /out -name 'UN1CA*.zip' | head -1)
          echo "ROM_FILE=$ROM_FILE" >> $GITHUB_OUTPUT
          echo "ROM_NAME=$(basename $ROM_FILE)" >> $GITHUB_OUTPUT
          echo "Found ROM file: $ROM_FILE"

      - name: Upload ROM to GitHub Releases
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find-rom.outputs.ROM_FILE }}
          tag_name: build-${{ github.run_id }}
          name: "UN1CA ROM Build #${{ github.run_number }}"
          body: "Automated build of UN1CA ROM for ${{ matrix.target }}"
          draft: false
          prerelease: false
